<?php


namespace Firesphere\SolrSearch\Extensions;

use Firesphere\SolrSearch\Indexes\BaseIndex;
use Firesphere\SolrSearch\Services\SolrCoreService;
use ReflectionClass;
use SilverStripe\Core\ClassInfo;
use SilverStripe\Core\Config\Config;
use SilverStripe\Core\Injector\Injector;
use SilverStripe\ORM\DataExtension;
use Solarium\Core\Client\Client;

class DataObjectExtension extends DataExtension
{

    public function onAfterWrite()
    {
        parent::onAfterWrite(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws \ReflectionException
     */
    public function onAfterDelete()
    {
        parent::onAfterDelete();

        $indexes = ClassInfo::subclassesFor(BaseIndex::class);

        foreach ($indexes as $index) {

            // Skip the abstract base
            $ref = new ReflectionClass($index);
            if (!$ref->isInstantiable()) {
                continue;
            }

            /** @var BaseIndex $index */
            $index = Injector::inst()->get($index);
            $config = Config::inst()->get(SolrCoreService::class, 'config');
            $config['endpoint'] = $index->getConfig($config['endpoint']);
            $config['timeout'] = 10000; // doesn't seem to be working?
            // create a client instance
            $client = new Client($config);

            try {
                // get an update query instance
                $update = $client->createUpdate();

                // add the delete query and a commit command to the update query
                $update->addDeleteQuery('_documentid:' . $this->owner->ClassName . '-' . $this->owner->ID);
                $update->addCommit();
            } catch (\Exception $e) {
                // Continue, this document doesn't exist, ignore it :)
                continue;
            }
        }
    }
}
